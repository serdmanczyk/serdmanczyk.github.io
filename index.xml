<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steven Erdmanczyk Jr.</title>
    <link>http://serdmanczyk.github.io/</link>
    <description>Recent content on Steven Erdmanczyk Jr.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://serdmanczyk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Steven James Erdmanczyk Jr.</title>
      <link>http://serdmanczyk.github.io/about/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://serdmanczyk.github.io/about/</guid>
      <description>I earned my Masters of Science in Electrical Engineering at the University of North Carolina at Charlotte. My thesis focused on networking mobile robots. I blogged about it here.
I currently work as a Senior Automation Engineer with Disney in Seatte, WA where I focus on automating tasks on behalf of systems engineers.
While I&amp;rsquo;m not spending free time with my son, wife, or dog I sometimes hobby with Golang, Python, and electronics/robotics.</description>
    </item>
    
    <item>
      <title>Bifröst - a queryable in-process worker queue (golang)</title>
      <link>http://serdmanczyk.github.io/post/2017-08-24-Bifrost/</link>
      <pubDate>Thu, 24 Aug 2017 20:00:01 -0700</pubDate>
      
      <guid>http://serdmanczyk.github.io/post/2017-08-24-Bifrost/</guid>
      <description>Tl;DR I wrote a simple in-memory job queue for golang. All it does is spin up a set of background worker goroutines, then accepts sending anything that implements interface type JobRunner interface {Run() error}) to the workers as jobs.
Other features:
 Query jobs based on job ID Returned &amp;lsquo;tracker&amp;rsquo; that can be used to check status or wait on completion Job status is JSON serializable, REST API friendly  Check out the project on Github: Bifröst - Golang query-able job queue.</description>
    </item>
    
    <item>
      <title>A fullstack Go &#43; ReactJS App deployed with Docker</title>
      <link>http://serdmanczyk.github.io/post/2016-10-14-GoFullstackApp/</link>
      <pubDate>Sun, 23 Oct 2016 20:00:01 -0700</pubDate>
      
      <guid>http://serdmanczyk.github.io/post/2016-10-14-GoFullstackApp/</guid>
      <description>Disclaimer: this project has changed.  Nginx has been removed among other fancy things.
Posts about updates pending&amp;hellip;
See latest code for info Release v2.0 Drop Nginx, convert to Traefik  /Disclaimer 
What? I&amp;rsquo;ve written a fullstack app: Go backend, ReactJS web frontend, deployed using Docker-Compose.
I call it Freyr, obligatory screenshots:
You can read more about the app itself on its github page. You can even view the app actually running at frey.</description>
    </item>
    
    <item>
      <title>Python Observer Metaclass</title>
      <link>http://serdmanczyk.github.io/post/2016-03-11-PythonObserverMetaclass/</link>
      <pubDate>Thu, 10 Mar 2016 17:24:01 -0800</pubDate>
      
      <guid>http://serdmanczyk.github.io/post/2016-03-11-PythonObserverMetaclass/</guid>
      <description>Why? Looking back and grimacing at my Master&amp;rsquo;s thesis code written in the halcyon days of graduate school when I had just started learning Python, I thought it would be a rewarding process to try and re-write it using better coding practices.
I was wrong.
At first I found a few interesting ways to re-architect the code, but when that dust clear I realized I would just be spending hours re-implementing mundane details.</description>
    </item>
    
    <item>
      <title>Notes and Chords using Python</title>
      <link>http://serdmanczyk.github.io/post/2015-06-11-Python_XBee_Sounds_Library/</link>
      <pubDate>Thu, 11 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://serdmanczyk.github.io/post/2015-06-11-Python_XBee_Sounds_Library/</guid>
      <description>Life events: my wife and I will be closing on a house in a couple days. Yay!
Things have moved quick since moving here to Seattle and I&amp;rsquo;ve realized I haven&amp;rsquo;t been as good about posting on this blog. Just to get content on here, I figured I would share a recent small project I&amp;rsquo;ve been working on.
In what time I can spare I&amp;rsquo;ve working on an education course for a hackerspace / STEAM education group here in Seattle.</description>
    </item>
    
    <item>
      <title>Moving to Seattle, How&#39;s the Weather? (graphs!)</title>
      <link>http://serdmanczyk.github.io/post/2015-02-12-moving-to-seattle-hows-the-weather/</link>
      <pubDate>Wed, 25 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://serdmanczyk.github.io/post/2015-02-12-moving-to-seattle-hows-the-weather/</guid>
      <description>My wife and I recently relocated from Charlotte, NC to Seattle, WA and so far we&amp;rsquo;ve loved it!
One of the most common things people talk about when you mention moving to the Pacific Northwest is the weather, particularly the kind that results in being wet. The weather here is obviously different, but in my short time here it hasn&amp;rsquo;t seemed that different. Being the scientific type, I went straight to finding objective data to make heads or tails of my impression so far.</description>
    </item>
    
    <item>
      <title>Online Class Attendance App using Flask/MongoDB</title>
      <link>http://serdmanczyk.github.io/ClassAtttendanceApp/</link>
      <pubDate>Wed, 18 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://serdmanczyk.github.io/ClassAtttendanceApp/</guid>
      <description>Motivation My friends and I teach a parkour class at a local gymnastics gym, which we organize ourselves. We needed a solid method for logging attendance. There were many free solutions, but they all followed the attendance model similar to school classroom attendance: each class has assigned students and you mark attendance by checking them off as absent, tardy, attended, excused, etc. This didn&amp;rsquo;t fit our model because we ran our class on a come-as-you-can basis.</description>
    </item>
    
    <item>
      <title>XBee API Mode Tutorial Using Python and Arduino</title>
      <link>http://serdmanczyk.github.io/XBeeAPI-PythonArduino-Tutorial/</link>
      <pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://serdmanczyk.github.io/XBeeAPI-PythonArduino-Tutorial/</guid>
      <description>Disclaimer: This is just a tutorial.  This is intended to educate with basic XBee API mode setup, and how the XBee frame format works.
If you&amp;rsquo;re looking for a library, I recommend for XBee for Python and checkout xbee-arduino for Arduino.
 /Disclaimer  Introduction This post is a tutorial, with example code, covering how to communicate using XBee 802.15.4 (Series 1) radios in API mode using Python and Arduino.</description>
    </item>
    
    <item>
      <title>Developer Blog Begins</title>
      <link>http://serdmanczyk.github.io/BlogStarts/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://serdmanczyk.github.io/BlogStarts/</guid>
      <description>So I&amp;rsquo;ve decided to start a developer&amp;rsquo;s blog. My first motivation in doing this was to share information on side projects as I continue to hobby in hacking/making things with electronics in my free time. Hopefully things I do/make would inspire other people to do similar or greater things. My second motivation is to also use it as a place to showcase software engineering side projects for others to read and build off of as well as for professional exposure.</description>
    </item>
    
    <item>
      <title>Master&#39;s Thesis</title>
      <link>http://serdmanczyk.github.io/MSEEThesis/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://serdmanczyk.github.io/MSEEThesis/</guid>
      <description>Intro I’ve decided to begin blogging my various endeavors in software development and electrical engineering hackery. To kick it off, I’m writing a post describing the work I did for my Masters of Science in Electrical Engineering thesis. This post will start it off with a brief introduction/overview, then I’ll cover individual aspects of the project.
You can read my full thesis via my advisor’s website, and all source code is available to view at github.</description>
    </item>
    
  </channel>
</rss>